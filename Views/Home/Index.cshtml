@model List<ToDoApp.Models.Task>

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            background-color: #1a1a1a;
            color: #ffffff;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            color: #00ccff;
            text-align: center;
        }
        .task-list {
            list-style: none;
            padding: 0;
        }
        .task-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            background-color: #2c2c2c;
            margin-bottom: 10px;
            border-radius: 5px;
        }
        .task-item span {
            flex-grow: 1;
        }
        .task-item.completed span {
            text-decoration: line-through;
        }
        .task-actions a {
            color: #00ccff;
            margin-left: 10px;
            text-decoration: none;
        }
        .task-actions a:hover {
            text-decoration: underline;
        }
        form {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }
        input[type="text"] {
            padding: 8px;
            margin-right: 10px;
            border: none;
            border-radius: 4px;
            background-color: #333;
            color: #fff;
        }
        button {
            padding: 8px 16px;
            background-color: #00ccff;
            border: none;
            border-radius: 4px;
            color: #1a1a1a;
            cursor: pointer;
        }
        button:hover {
            background-color: #0099cc;
        }
        .time-stamp {
            font-size: 0.8em;
            color: #999;
        }
    </style>
</head>
<body>
<h1>To-Do List</h1>
<form asp-action="Create" method="post">
    <input name="title" placeholder="New task" />
    <button type="submit">Add</button>
</form>
<ul class="task-list">
    @foreach (var item in Model)
    {
    <li class="task-item @(item.IsCompleted ? "completed" : "")">
        <span>@item.Title</span>
        <div class="task-actions">
            @if (!item.IsCompleted)
            {
            <a asp-action="Complete" asp-route-id="@item.Id">Complete</a>
            }
            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            <div class="time-stamp">
                Created: @item.CreatedAt.ToString("g")<br />
                @(item.LastEditedAt.HasValue ? $"Edited: {item.LastEditedAt.Value:g}" : "")
            </div>
        </div>
    </li>
    }
</ul>
</body>
</html>